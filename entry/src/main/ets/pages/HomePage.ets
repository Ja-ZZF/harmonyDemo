//‰∏ªÈ°µ

import { PostCard } from '../components/PostCard';
import { PostDetail, PostSimple } from '../models/Post';
import { UserSimple } from '../models/User';
import { PostService } from '../services/post.service';
import { UserService } from '../services/user.service';

@Entry
@Component
struct HomePage {
  private userService = new UserService(); //Áî®Êà∑ÊúçÂä°
  private postService = new PostService(); //Á¨îËÆ∞ÊúçÂä°

  @State user : UserSimple = {
    user_id : 0,
    nickname : '',
    avatar: '',
    email : '',
    is_followed: false,
  };
  @State posts : PostSimple[]=[];


  async aboutToAppear(): Promise<void> {
    this.user = await this.userService.getSelf(); //Ëé∑ÂèñÁî®Êà∑‰ø°ÊÅØ
    this.posts = await this.postService.getAllPost(); //Ëé∑ÂèñÊâÄÊúâÁ¨îËÆ∞‰ø°ÊÅØ

    const postDetail : PostDetail = await this.postService.getPostDetail(1);

    console.info('Á¨îËÆ∞‰ø°ÊÅØÔºö',this.posts);
  }

  build() {
    Scroll() {
      Column({ space: 16 }) {
        // È°∂ÈÉ®Ê¨¢Ëøé‰ø°ÊÅØ
        Text(`‰Ω†Â•ΩÔºå${this.user.nickname} üëã`)
          .fontSize(20)
          .fontWeight(FontWeight.Bold)
          .padding({ left: 16, right: 16, top: 16 })

        // ‰∏ª‰ΩìÔºö‰∏§ÂàóÂç°ÁâáÊµÅÂºèÂ∏ÉÂ±Ä
        Row({ space: 8 }) {
          // Â∑¶Âàó
          Column({ space: 8 }) {
            ForEach(
              this.posts.filter((item: PostSimple, index: number) => index % 2 === 0),
              (item: PostSimple) => {
                PostCard({ post: item })
                  .width('100%')
              },
              (item: PostSimple) => item.post_id.toString()
            )
          }
          .layoutWeight(1)

          // Âè≥Âàó
          Column({ space: 8 }) {
            ForEach(this.posts.filter((item : PostSimple, index : number) => index % 2 === 1), (item : PostSimple) => {
              PostCard({ post: item })
                .width('100%')
            }, (item:PostSimple) => item.post_id.toString())
          }
          .layoutWeight(1)
        }
        .padding({ left: 8, right: 8, bottom: 16 })
      }
    }
  }


}
